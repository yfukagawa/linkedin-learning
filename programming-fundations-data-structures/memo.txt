// numerical data types

Whole Numbers
- short, 16 bits, -32768 ~ 32767
- int, 32 bits, -2billion ~ 2billion
- long, 64 bits, -(2^63) ~ 2^63

Decimal Numbers
- float, 32 bits, ~7 decimal digits
- double, 64 bits, ~16 decimal digits
//// above are the data types available in Java
//// int and double are also available in the most of languages

JavaScript:
numbers: covers everything above

Python 2: int, long, float, complex
Python 3: long (int)


Signed data types
- have both positive and negative values

Unsigned data type
- have only positive values
- since there is no negative value, their ranges of positive values are twice than signed


// booleans and characters
- boolean -> 0 or 1, 1 bit value; 0 = false, 1 = true
- Int -> 0s and 1s; 32 bits of 0s and 1s
- Double -> 0s and 1s
- Character -> 0s and 1s

// primitive types
// also called basic or value types
- int, short, double, boolean, long char, float


String

Referenced types 
 - data structures
 - Strings
 - they have pointers to point to the address of each data value
 - variableName -> memoryAddress -> value
Primitive types
 - variableName -> data


Array
- collection of elements, where each item is identified by an index or key

Data Structure
- a collection with a defined way of accessing and storing items

Container objects
- such as array, an object that contain multiple primitives or other containers within

Multidimensional array

Jagged arrays
- a way to avoid wasted memory space/slots

Resizable arrays and language
- Ruby and JavaScript can resize array -> dynamic or mutable arrays
- Java -> ArrayList

Search array
- for loop to scan through every element -> linear search
- indexOf method

Sort arrays
- comparator

Big O Notation
- notation used to describe the performance or complexity of an algorithm
- time complexity
- O(1) time
- O(n) time

Linked list
- pointers
- linear access, but not linear data structure
- each link is a pointer = holds an address to a memory location = data does not need to be stored in the continuous locations in the memory
- node: contains data and a pointer
- head of the list = the first node of the list
- add, access, delete, search, insert into

Singly Linked List

Doubly Linked List

Java
- List is an interface within the Collection framework
-- ArrayList
-- LinkedList

Javascript does not have built in Linked List; use third party implementation

Python
- doesn't really have list; it is rather resizable array

Big O Notation
 - Runtime complexity

Slow random access
Random access
 - directly access the element via index

Stack
- like a stack of pancakes
- Last in First Out (LIFO)
- "push" to add
- "pop" to remove

Runtime stack
- keeps track of variables
- error tracing
- keep track of its states

Queue
- FIFO
- Enqueue = an item is added to a list
- Dequeue = an item is removed from a list
- peek()

Priority Queue
- each element has a priority associated with it
- Java has the PritorityQueue class

Dequek
- double-ended queue
- stack and queue at the same time
- items can be added or removed from either end
- Java has interface for it

Stacks are great for:
- reversing things
- keeping track of state
- add/remove from back of a structure
- helping to keep state
- LIFO

Queues are great for:
- FIFO

Associative Array
- collection of key-value pairs
- key:value
- key-value pairs are bound together
- each key must be unique
- order isn't important
- values are accessed with the key
- values do not need to be unique
- abstracting type
- hash table

Hashing 
- data conversion process
- one way function
- ASCII
- not the same as encryption

Collision
- anytime two inputs produce the same hash value

Hash table
- an implementation of the associative array abstract data structure

Separate Chaining

Java has built in hashCode function

JavaScript either implement custom code or npm install an appropriate module

Java has hash table and hash map collections

Hash map operations always take the same amount	of time, regardless of the size of the hash table

Hash map operations:
- O(1) for search, insertion, and Delete